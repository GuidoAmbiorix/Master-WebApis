// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20250125191107_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4");

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fa9fd44-5e41-4d89-b6b8-58543a0d796a"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4753),
                            Titulo = "Refined Frozen Ball"
                        },
                        new
                        {
                            Id = new Guid("e4aeeec6-afd0-475f-a955-8509d5db19bf"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4767),
                            Titulo = "Fantastic Frozen Salad"
                        },
                        new
                        {
                            Id = new Guid("95aa8ce9-db70-4597-b488-95d1dc2f0db4"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4783),
                            Titulo = "Incredible Granite Bacon"
                        },
                        new
                        {
                            Id = new Guid("06150002-4d47-491c-99f8-6f8188daec74"),
                            Descripcion = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4793),
                            Titulo = "Gorgeous Plastic Mouse"
                        },
                        new
                        {
                            Id = new Guid("2bbe5b2e-317d-4c4b-9163-454c23cda813"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4801),
                            Titulo = "Rustic Metal Cheese"
                        },
                        new
                        {
                            Id = new Guid("6f4ecc64-6833-42cf-bf90-9e60d847fcee"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4809),
                            Titulo = "Sleek Metal Chicken"
                        },
                        new
                        {
                            Id = new Guid("13f16e7c-af4d-45c2-8ca3-ab015fd378ce"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4817),
                            Titulo = "Handmade Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("c1951966-e6e7-440b-8529-8a3d0254b80f"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4834),
                            Titulo = "Generic Granite Pizza"
                        },
                        new
                        {
                            Id = new Guid("b185c9ed-3abf-4b89-9b69-9a0350656d20"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2025, 1, 25, 19, 11, 7, 157, DateTimeKind.Utc).AddTicks(4842),
                            Titulo = "Practical Rubber Chair"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fd0fa6f-1031-412f-851a-02131817d139"),
                            Apellidos = "Okuneva",
                            Grado = "National Response Consultant",
                            Nombre = "Mertie"
                        },
                        new
                        {
                            Id = new Guid("b2a01f98-e4a4-4dc7-aae3-6cf4d172d4ac"),
                            Apellidos = "Sanford",
                            Grado = "Global Metrics Manager",
                            Nombre = "Ron"
                        },
                        new
                        {
                            Id = new Guid("03bf5324-109d-41b3-8203-baf03c1547be"),
                            Apellidos = "Weber",
                            Grado = "Legacy Assurance Coordinator",
                            Nombre = "Gilberto"
                        },
                        new
                        {
                            Id = new Guid("65d32bdf-5067-4623-8b13-7bf3c0464dff"),
                            Apellidos = "Wiza",
                            Grado = "Dynamic Program Analyst",
                            Nombre = "Giles"
                        },
                        new
                        {
                            Id = new Guid("30f882c3-730c-4acf-a7ba-523eb78c6443"),
                            Apellidos = "Christiansen",
                            Grado = "Investor Factors Supervisor",
                            Nombre = "William"
                        },
                        new
                        {
                            Id = new Guid("b2b84d22-750a-4a2f-a1a2-36c114cca408"),
                            Apellidos = "Hamill",
                            Grado = "Legacy Configuration Assistant",
                            Nombre = "Chelsea"
                        },
                        new
                        {
                            Id = new Guid("3d102e5d-f9a8-48ee-9180-2e20cc16d0fd"),
                            Apellidos = "Kuhlman",
                            Grado = "Principal Interactions Specialist",
                            Nombre = "Augusta"
                        },
                        new
                        {
                            Id = new Guid("c4f4ae11-0037-4307-8939-f26410f3a49c"),
                            Apellidos = "Heidenreich",
                            Grado = "Product Optimization Manager",
                            Nombre = "Dayne"
                        },
                        new
                        {
                            Id = new Guid("6b58542c-5378-4118-8531-47e5fd143423"),
                            Apellidos = "Dietrich",
                            Grado = "Principal Paradigm Supervisor",
                            Nombre = "Stuart"
                        },
                        new
                        {
                            Id = new Guid("2ca477f1-4f72-444c-b8ef-5946ed7e72e2"),
                            Apellidos = "Bradtke",
                            Grado = "Regional Program Associate",
                            Nombre = "Milton"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("986c0863-f264-42e7-b59d-e2e229d5582d"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
